window.gLocalAssetContainer["node_modules/@akashic-extension/akashic-label/lib/Label.js"] = function(g) { !function(t,e,i,r,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])};return function(e,i){function r(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),s=e("./RubyParser"),a=e("./FragmentDrawInfo"),h=e("./DefaultRubyParser"),u=function(t){function e(e){var i=t.call(this,e)||this;return i.text=e.text,i.font=e.font,i.fontSize=e.fontSize,i._lineBreakWidth=e.width,i.lineBreak="lineBreak"in e?e.lineBreak:!0,i.lineGap=e.lineGap||0,i.textAlign="textAlign"in e?e.textAlign:g.TextAlign.Left,i.textColor=e.textColor,i.trimMarginTop="trimMarginTop"in e?e.trimMarginTop:!1,i.widthAutoAdjust="widthAutoAdjust"in e?e.widthAutoAdjust:!1,i.rubyEnabled="rubyEnabled"in e?e.rubyEnabled:!0,i.fixLineGap="fixLineGap"in e?e.fixLineGap:!1,i.rubyParser="rubyParser"in e?e.rubyParser:h.parse,e.rubyOptions||(e.rubyOptions={}),i.rubyOptions=e.rubyOptions,i.rubyOptions.rubyFontSize="rubyFontSize"in e.rubyOptions?e.rubyOptions.rubyFontSize:e.fontSize/2,i.rubyOptions.rubyFont="rubyFont"in e.rubyOptions?e.rubyOptions.rubyFont:i.font,i.rubyOptions.rubyGap="rubyGap"in e.rubyOptions?e.rubyOptions.rubyGap:0,i.rubyOptions.rubyAlign="rubyAlign"in e.rubyOptions?e.rubyOptions.rubyAlign:s.RubyAlign.SpaceAround,i._lines=[],i._beforeText=void 0,i._beforeTextAlign=void 0,i._beforeFontSize=void 0,i._beforeLineBreak=void 0,i._beforeFont=void 0,i._beforeWidth=void 0,i._beforeRubyEnabled=void 0,i._beforeFixLineGap=void 0,i._beforeTrimMarginTop=void 0,i._beforeWidthAutoAdjust=void 0,i._beforeRubyOptions={},i._invalidateSelf(),i}return o(e,t),e.prototype.invalidate=function(){this._invalidateSelf(),t.prototype.invalidate.call(this)},e.prototype.renderCache=function(t){if(this.rubyEnabled||0!==this.fontSize){t.save();for(var e=0,i=0;i<this._lines.length;++i)this._lines[i].width>0&&this._lines[i].height>0&&t.drawImage(this._lines[i].surface,0,0,this._lines[i].width,this._lines[i].height,this._offsetX(this._lines[i].width),e),e+=this._lines[i].height+this.lineGap;this.textColor&&(t.setCompositeOperation(g.CompositeOperation.SourceAtop),t.fillRect(0,0,this._lineBreakWidth,this.height,this.textColor)),t.restore()}},e.prototype.destroy=function(){this._destroyLines(),t.prototype.destroy.call(this)},e.prototype._offsetX=function(t){switch(this.textAlign){case g.TextAlign.Left:return 0;case g.TextAlign.Right:return this._lineBreakWidth-t;case g.TextAlign.Center:return(this._lineBreakWidth-t)/2;default:return 0}},e.prototype._destroyLines=function(){for(var t=0;t<this._lines.length;t++)this._lines[t].surface&&!this._lines[t].surface.destroyed()&&this._lines[t].surface.destroy();this._lines=void 0},e.prototype._invalidateSelf=function(){if(this.fontSize<0)throw g.ExceptionFactory.createAssertionError("Label#_invalidateSelf: fontSize must not be negative.");if(this.lineGap<-1*this.fontSize)throw g.ExceptionFactory.createAssertionError("Label#_invalidateSelf: lineGap must be greater than -1 * fontSize.");this._beforeWidth!==this.width&&(this._lineBreakWidth=this.width),(this._beforeText!==this.text||this._beforeFontSize!==this.fontSize||this._beforeFont!==this.font||this._beforeLineBreak!==this.lineBreak||this._beforeWidth!==this.width&&this._beforeLineBreak===!0||this._beforeTextAlign!==this.textAlign||this._beforeRubyEnabled!==this.rubyEnabled||this._beforeFixLineGap!==this.fixLineGap||this._beforeTrimMarginTop!==this.trimMarginTop||this._beforeWidthAutoAdjust!==this.widthAutoAdjust||this._isDifferentRubyOptions(this._beforeRubyOptions,this.rubyOptions))&&this._updateLines(),this.widthAutoAdjust&&(this.width=Math.ceil(this._lines.reduce(function(t,e){return Math.max(t,e.width)},0)));for(var t=this.lineGap*(this._lines.length-1),e=0;e<this._lines.length;e++)t+=this._lines[e].height;this.height=t,this._beforeText=this.text,this._beforeTextAlign=this.textAlign,this._beforeFontSize=this.fontSize,this._beforeLineBreak=this.lineBreak,this._beforeFont=this.font,this._beforeWidth=this.width,this._beforeRubyEnabled=this.rubyEnabled,this._beforeFixLineGap=this.fixLineGap,this._beforeTrimMarginTop=this.trimMarginTop,this._beforeWidthAutoAdjust=this.widthAutoAdjust,this._beforeRubyOptions.rubyFontSize=this.rubyOptions.rubyFontSize,this._beforeRubyOptions.rubyFont=this.rubyOptions.rubyFont,this._beforeRubyOptions.rubyGap=this.rubyOptions.rubyGap,this._beforeRubyOptions.rubyAlign=this.rubyOptions.rubyAlign},e.prototype._updateLines=function(){for(var t=this.rubyEnabled?this.rubyParser(this.text):[this.text],e=this._divideToLines(t),i=[],r=this._beforeFontSize===this.fontSize&&this._beforeFont===this.font&&!this._isDifferentRubyOptions(this._beforeRubyOptions,this.rubyOptions),n=0;n<e.length;n++){var o=e[n],s=this._lines[n];r&&void 0!==s&&o.sourceText===s.sourceText&&o.width===s.width&&o.height===s.height?i.push(s):(s&&s.surface&&!s.surface.destroyed()&&s.surface.destroy(),this._drawLineInfoSurface(o),i.push(o))}for(var n=i.length;n<this._lines.length;n++){var s=this._lines[n];s.surface&&!s.surface.destroyed()&&s.surface.destroy()}this._lines=i},e.prototype._drawLineInfoSurface=function(t){var e=t.fragmentDrawInfoArray,i=this._calcRubyHeightInfo(e),r=this.scene.game.resourceFactory.createSurface(Math.ceil(t.width),Math.ceil(t.height)),n=r.renderer();n.begin(),n.save();for(var o=i.hasRubyFragmentDrawInfo||this.fixLineGap?this.rubyOptions.rubyGap+i.maxRubyGlyphHeightWithOffsetY:0,s=t.minMinusOffsetY,h=0;h<e.length;h++){var u=e[h];u instanceof a.RubyFragmentDrawInfo?this._drawRubyFragmentDrawInfo(n,u,o-s,-i.minRubyMinusOffsetY):u instanceof a.StringDrawInfo&&this._drawStringGlyphs(n,this.font,u.glyphs,this.fontSize,0,o-s,0),n.translate(u.width,0)}n.restore(),n.end(),t.surface=r},e.prototype._drawStringGlyphs=function(t,e,i,r,n,o,s){void 0===s&&(s=0),t.save(),t.translate(n,o);for(var a=0;a<i.length;a++){var h=i[a],u=r/e.size,f=h.advanceWidth*u;t.save(),t.transform([u,0,0,u,0,0]),h.width>0&&h.height>0&&t.drawImage(h.surface,h.x,h.y,h.width,h.height,h.offsetX,h.offsetY),t.restore(),t.translate(f+s,0)}t.restore()},e.prototype._drawRubyFragmentDrawInfo=function(t,e,i,r){var n,o,a,h,u=e.fragment,f="rubyFontSize"in u?u.rubyFontSize:this.rubyOptions.rubyFontSize,y="rubyAlign"in u?u.rubyAlign:this.rubyOptions.rubyAlign,b="rubyFont"in u?u.rubyFont:this.rubyOptions.rubyFont,p=e.rtWidth>e.rbWidth,l=e.width,d=e.rtWidth,c=e.rbWidth;switch(y){case s.RubyAlign.Center:a=0,h=0,n=p?0:(l-d)/2,o=p?(l-c)/2:0;break;case s.RubyAlign.SpaceAround:a=e.rubyGlyphs.length>0?(l-d)/e.rubyGlyphs.length:0,h=0,n=p?0:a/2,o=p?(l-c)/2:0;break;default:throw g.ExceptionFactory.createAssertionError("Label#_drawRubyFragmentDrawInfo: unknown rubyAlign.")}this._drawStringGlyphs(t,this.font,e.glyphs,this.fontSize,o,i,h),this._drawStringGlyphs(t,b,e.rubyGlyphs,f,n,r,a)},e.prototype._calcRubyHeightInfo=function(t){for(var e,i=this.rubyOptions.rubyFontSize,r=0,n=this.rubyOptions.rubyGap,o=!1,s=0,h=0;h<t.length;h++){var u=t[h];if(u instanceof a.RubyFragmentDrawInfo){var f=u.fragment;f.rubyFontSize>i&&(i=f.rubyFontSize),f.rubyGap>n&&(n=f.rubyGap);var y=(f.rubyFontSize?f.rubyFontSize:this.rubyOptions.rubyFontSize)/(f.rubyFont?f.rubyFont.size:this.rubyOptions.rubyFont.size),b=Math.max.apply(Math,u.rubyGlyphs.map(function(t){return t.offsetY>0?t.height+t.offsetY:t.height})),p=Math.min.apply(Math,u.rubyGlyphs.map(function(t){return t.offsetY>0?t.offsetY:0}));b*y>r&&(r=b*y);var l=f.rubyFont?f.rubyFont:this.rubyOptions.rubyFont,g=this._calcStandardOffsetY(l),d=(b-Math.min(p,g))*y;d>s&&(s=d,e=Math.min(p,g)*y),o=!0}}0===r&&(r=this.rubyOptions.rubyFontSize);var c=this.trimMarginTop?e:0;return{maxRubyFontSize:i,maxRubyGlyphHeightWithOffsetY:r,minRubyMinusOffsetY:c,maxRubyGap:n,hasRubyFragmentDrawInfo:o}},e.prototype._divideToLines=function(t){for(var e={resultLines:[],currentStringDrawInfo:new a.StringDrawInfo("",0,[]),currentLineInfo:{sourceText:"",fragmentDrawInfoArray:[],width:0,height:0,minMinusOffsetY:0,surface:void 0}},i=0;i<t.length;i++){var r=t[i];if("string"==typeof r){for(var n=r.replace(/\r\n|\n/g,"\r"),o=0;o<n.length;o++)if("\r"===n[o])this._tryPushCurrentStringDrawInfo(e),this._feedLine(e);else{var s=g.Util.charCodeAt(n,o);if(!s)continue;var h=this.font.glyphForCharacter(s);if(!h){var u=4294901760&s?String.fromCharCode((4294901760&s)>>>16,65535&s):String.fromCharCode(s);this.game().logger.warn("Label#_invalidateSelf(): failed to get a glyph for '"+u+"' (BitmapFont might not have the glyph or DynamicFont might create a glyph larger than its atlas).");continue}var f=this.fontSize/this.font.size,y=h.advanceWidth*f;if(0>=y)continue;this._needLineBreak(e,y)&&(this._tryPushCurrentStringDrawInfo(e),this._feedLine(e)),this._addToCurrentStringDrawInfo(e,y,h,n[o])}this._tryPushCurrentStringDrawInfo(e)}else{var b=this._createRubyFragmentDrawInfo(r);if(b.width<=0)continue;this._needLineBreak(e,b.width)&&this._feedLine(e),e.currentLineInfo.fragmentDrawInfoArray.push(b),e.currentLineInfo.width+=b.width,e.currentLineInfo.sourceText+=r.text}}return this._feedLine(e),e.resultLines},e.prototype._createStringGlyph=function(t,e){for(var i=[],r=0;r<t.length;r++){var n=g.Util.charCodeAt(t,r);if(n){var o=this.font.glyphForCharacter(n);if(o)i.push(o);else{var s=4294901760&n?String.fromCharCode((4294901760&n)>>>16,65535&n):String.fromCharCode(n);this.game().logger.warn("Label#_invalidateSelf(): failed to get a glyph for '"+s+"' (BitmapFont might not have the glyph or DynamicFont might create a glyph larger than its atlas).")}}}return i},e.prototype._createRubyFragmentDrawInfo=function(t){var e=this._createStringGlyph(t.rb,this.font),i=this._createStringGlyph(t.rt,this.rubyOptions.rubyFont),r="rubyFont"in t?t.rubyFont:this.rubyOptions.rubyFont,n="rubyFontSize"in t?t.rubyFontSize:this.rubyOptions.rubyFontSize,o=this.fontSize/this.font.size,s=n/r.size,h=e.length>0?e.map(function(t){return t.advanceWidth}).reduce(function(t,e){return t+e})*o:0,u=i.length>0?i.map(function(t){return t.advanceWidth}).reduce(function(t,e){return t+e})*s:0,f=h>u?h:u;return new a.RubyFragmentDrawInfo(t,f,h,u,e,i)},e.prototype._tryPushCurrentStringDrawInfo=function(t){t.currentStringDrawInfo.width>0&&(t.currentLineInfo.fragmentDrawInfoArray.push(t.currentStringDrawInfo),t.currentLineInfo.width+=t.currentStringDrawInfo.width,t.currentLineInfo.sourceText+=t.currentStringDrawInfo.text),t.currentStringDrawInfo=new a.StringDrawInfo("",0,[])},e.prototype._feedLine=function(t){var e=this.fontSize/this.font.size,i=1/0,r=0,n=0;t.currentLineInfo.fragmentDrawInfoArray.forEach(function(t){t.glyphs.forEach(function(t){r>t.offsetY&&(r=t.offsetY),i>t.offsetY&&(i=t.offsetY);var e=t.offsetY>0?t.height+t.offsetY:t.height;e>n&&(n=e)})}),r*=e,n=t.currentLineInfo.fragmentDrawInfoArray.length>0?n*e-r:this.fontSize,n=Math.ceil(n);var o=this._calcRubyHeightInfo(t.currentLineInfo.fragmentDrawInfoArray);if(t.currentLineInfo.height=o.hasRubyFragmentDrawInfo||this.fixLineGap?n+o.maxRubyGlyphHeightWithOffsetY+o.maxRubyGap:n,t.currentLineInfo.minMinusOffsetY=r,this.trimMarginTop){var s=Math.min(i,this._calcStandardOffsetY(this.font))*e;t.currentLineInfo.height-=s,t.currentLineInfo.minMinusOffsetY+=s}t.resultLines.push(t.currentLineInfo),t.currentLineInfo={sourceText:"",fragmentDrawInfoArray:[],width:0,height:0,minMinusOffsetY:0,surface:void 0}},e.prototype._addToCurrentStringDrawInfo=function(t,e,i,r){t.currentStringDrawInfo.width+=e,t.currentStringDrawInfo.glyphs.push(i),t.currentStringDrawInfo.text+=r},e.prototype._needLineBreak=function(t,e){return this.lineBreak&&e>0&&t.currentLineInfo.width+t.currentStringDrawInfo.width+e>this._lineBreakWidth&&t.currentLineInfo.width+t.currentStringDrawInfo.width>0},e.prototype._isDifferentRubyOptions=function(t,e){return t.rubyFontSize!==e.rubyFontSize||t.rubyFont!==e.rubyFont||t.rubyGap!==e.rubyGap||t.rubyAlign!==e.rubyAlign},e.prototype._calcStandardOffsetY=function(t){var e="M",i=t.glyphForCharacter(e.charCodeAt(0));return i.offsetY},e}(g.CacheableE);i.exports=u}(g.module.exports,g.module.require,g.module,g.filename,g.dirname);}